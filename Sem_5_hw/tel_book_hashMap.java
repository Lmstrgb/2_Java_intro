//üìå –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–∏ —Å –ø–æ–º–æ—â—å—é HashMap.
//–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–Ω–∞ —É—á–∏—Ç—ã–≤–∞—Ç—å, —á—Ç–æ –≤–æ –≤—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –±—É–¥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –∏–º–µ–Ω–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏, 
//–∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—á–∏—Ç–∞—Ç—å, –∫–∞–∫ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏. –í—ã–≤–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ —É–±—ã–≤–∞–Ω–∏—é 
//—á–∏—Å–ª–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤.

package Sem_5_hw;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class tel_book_hashMap {

  public static void main(String[] args) {
    PhoneBook phoneBook = new PhoneBook();
    phoneBook.addContact("Igor Gogin", "+798765001");
    phoneBook.addContact("Olga Tabor", "+798743002");
    phoneBook.addContact("Alex", "+7937434005");
    phoneBook.addContact("Zina", "+79043503602");
    phoneBook.addContact("Zina", "+79043503603");
    phoneBook.addContact("Zina", "+79043503604");
    phoneBook.removeContact("Olga Tabor");
    phoneBook.addContact("Igor Gogin", "+798765011");
    phoneBook.addContact("Alex", "+7937434055");
    phoneBook.addContact("Max", "+79044703707");

     
    // phoneBook.printAllContacts(); // –≤—ã–≤–æ–¥–∏—Ç –≤ –Ω–µ–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
     phoneBook.printAllsortedContacts(); // –≤—ã–≤–æ–¥–∏—Ç –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
    // phoneBook.printPhoneNumber(phoneBook.getPhones("Igor Gogin"), "Igor Gogin"); //–≤—ã–¥–∞–µ—Ç –Ω–æ–º–µ—Ä —á–µ–ª–æ–≤–µ–∫–∞
    // phoneBook.createSortedList();
  }
}

// –ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è—Ç–Ω–æ —Å —ç—Ç–∏–º–∏ –∫–ª–∞—Å–∞–º–∏, –Ω–æ —Ç–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ –≤—ã–Ω–µ—Å–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç
// –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ
class PhoneBook {
  
  public HashMap<String, List<String>> phoneBook;

  public PhoneBook() {
    phoneBook = new HashMap<>();
  }

  public void addContact(String name, String phoneNumber) {
    if (phoneBook.containsKey(name)) {
      List<String> phoneNumbers = phoneBook.get(name);
      phoneNumbers.add(phoneNumber);
    } else {
      List<String> phoneNumbers = new ArrayList<>();
      phoneNumbers.add(phoneNumber);
      phoneBook.put(name, phoneNumbers);
    }
  }

  public void removeContact(String name) {
    phoneBook.remove(name);
  }

  // –ü–æ –∏–º–µ–Ω–∏ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω—ã, —Å–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
  public List<String> getPhones(String name) {
    return phoneBook.get(name);
  }

  public void printPhoneNumber(List<String> phoneNumber, String name) {
    String res_print = "";
    for (String pn : phoneNumber) {
      res_print += pn + " ";
    }
    System.out.println("Phone numbers of " + name + " " + res_print);

  }

  public void printAllContacts() {
    for (Map.Entry<String, List<String>> entry : phoneBook.entrySet()) {
      String name = entry.getKey();
      List<String> phoneNumbers = entry.getValue();
      String res_phone = "";

      for (String phoneNumber : phoneNumbers) {
        res_phone += phoneNumber + ", ";
      }
      // –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø—è—Ç—É—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ res_phone
      if (!res_phone.isEmpty()) {
        res_phone = res_phone.substring(0, res_phone.length() - 2); // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø—è—Ç–æ–π –∏ –ø—Ä–æ–±–µ–ª–∞
      }

      System.out.println("Name: " + name + ", Phone Number: " + res_phone);
    }
  }

  public void printAllsortedContacts() {
    // ArrayList<Integer> Lst = new ArrayList<>(phoneBook.size());
    String res_phone = "";

    List<Integer> Lst_sorted = createSortedList();

    for (Integer itm : Lst_sorted) {
      for (Map.Entry<String, List<String>> entry : phoneBook.entrySet()) {

        // Lst.add(phoneNumbers.size());

        if (itm == entry.getValue().size()) {
          res_phone = "";
          List<String> phone = entry.getValue();
          String name = entry.getKey();
          for (String phoneNum : phone) {
            res_phone += phoneNum + ", ";
          }
          // –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø—è—Ç—É—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ res_phone
          if (!res_phone.isEmpty()) {
            res_phone = res_phone.substring(0, res_phone.length() - 2); // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø—è—Ç–æ–π –∏ –ø—Ä–æ–±–µ–ª–∞
          }
          System.out.println("Name: " + name + ", Phone Number: " + res_phone);
        }

      }

    }

  }

  
  public List<Integer> createSortedList() {
    ArrayList<Integer> Lst = new ArrayList<>(phoneBook.size());
    for (Map.Entry<String, List<String>> entry : phoneBook.entrySet()) {
      List<String> phoneNumbers1 = entry.getValue();
      String name1 = entry.getKey();

      Lst.add(phoneNumbers1.size());
    }
    Collections.sort(Lst, Collections.reverseOrder()); // –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ Lst –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    // System.out.println(Lst);
    // –ö–∞–∫ –æ–∫–∞–∑–∞–ª–æ—Å—å –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é –Ω–∞—à–µ–π HashMap –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
    // —Å–ø–∏—Å–æ–∫ –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –¥–µ–ª–∞–µ–º
    List<Integer> Lst2 = new ArrayList<>();
    for (Integer element : Lst) {
      if (!Lst2.contains(element)) {
        Lst2.add(element);
      }
    }
    System.out.println(Lst2);
    return Lst2;

  }
}